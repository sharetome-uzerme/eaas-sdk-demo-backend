server.port=8080
server.context-path=/eaas-demo

#fileupload
multipart.maxFileSize=512Mb
multipart.maxRequestSize=512Mb

 #  1）当池子大小小于corePoolSize就新建线程，并处理请求
 #  2）当池子大小等于corePoolSize，把请求放入workQueue中，池子里的空闲线程就去从workQueue中取任务并处理
 #  3）当workQueue放不下新入的任务时，新建线程入池，并处理请求，如果池子大小撑到了maximumPoolSize就用RejectedExecutionHandler来做拒绝处理
 #  4）另外，当池子的线程数大于corePoolSize的时候，多余的线程会等待keepAliveTime长的时间，如果无请求可处理就自行销毁
xt.thread.CorePoolSize=1
xt.thread.MaxPoolSize=3000
xt.thread.KeepAliveSeconds=60
xt.thread.QueueCapacity=2000


#  EaaS Demo 相关配置---------------------------------------------------------------
# eaas server secret
eaas.config.clientId=public
eaas.config.clientSecret=public_secret
# eaas server url
eaas.config.server.dns=https://demo.uzer.me

# eaas demo file
eaas.demo.config.file-path=EaaS-Demo.docx
eaas.demo.config.root-path=/data/

eaas.demo.userId=admin
eaas.demo.password=123
#  EaaS Demo 相关配置 ---------------------------------------------------------------

spring.jmx.default-domain=eaas-demo